from config import interval, limit

async def get_closes(client, symbol, interval=interval, limit=limit): # ğŸŸ£ğŸŸ£
    """
    ObtÃ©m os preÃ§os de fechamento de velas para um sÃ­mbolo especÃ­fico.
    Args:
        client (BinanceAsyncClient): O cliente conectado Ã  API da Binance.
        symbol (str): O sÃ­mbolo de trading.
        interval (str): O intervalo das velas (ex.: '15m').
        limit (int): O nÃºmero de velas a ser recuperado.
    Returns:
        list: Uma lista dos preÃ§os de fechamento das velas.
    """
    klines = await client.get_klines(symbol=symbol, interval=interval, limit=limit)
    closes = [float(kline[4]) for kline in klines]
    return closes
    
async def get_klines(client, symbol, interval, limit):
    """
    ObtÃ©m as informaÃ§Ãµes completas de velas para um sÃ­mbolo especÃ­fico.
    Args:
        client (BinanceAsyncClient): O cliente conectado Ã  API da Binance.
        symbol (str): O sÃ­mbolo de trading.
        interval (str): O intervalo das velas.
         limit (int): O nÃºmero de velas a ser recuperado.
    Returns:
       list: Os detalhes de vela do ativo (lista de velas, cada vela tem open, close, high, low, volume)
    """
    klines = await client.get_klines(symbol=symbol, interval=interval, limit=limit)
    return klines